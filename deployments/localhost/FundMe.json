{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x2e932b41a368da7456811ee793b65189bf3f3744072d4aece9c5ab9821637068",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "835558",
    "logsBloom": "0x
    "blockHash": "0x2dd0e35443c15bbe5c5b9b7b193cb590a68e5d0f64e84087b00af2e70587d833",
    "transactionHash": "0x2e932b41a368da7456811ee793b65189bf3f3744072d4aece9c5ab9821637068",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "835558",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "39279d98465d7dc8ef11e1907f360e8d",
  "metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"David Korgalidze\",\"details\":\"This implements price feeds as our library\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A sample Funding Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This contract is for creating a sample funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// solhint-disable-next-line interface-starts-with-i\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\\\";\\nimport {PriceConverter} from \\\"./PriceConverter.sol\\\";\\n\\n\\nerror FundMe__NotOwner();\\n\\n/**@title A sample Funding Contract\\n * @author David Korgalidze\\n * @notice This contract is for creating a sample funding contract\\n * @dev This implements price feeds as our library\\n */\\n\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) public addressToAmountFunded;\\n    address[] public funders;\\n\\n   \\n    address public /* immutable */ i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n    AggregatorV3Interface private priceFeed;\\n    \\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        require(msg.value.getConversionRate(priceFeed) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        addressToAmountFunded[msg.sender] += msg.value;\\n        funders.push(msg.sender);\\n    }\\n    \\n \\n    modifier onlyOwner {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n    \\n    function withdraw() public onlyOwner {\\n        for (uint256 funderIndex=0; funderIndex < funders.length; funderIndex++){\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        funders = new address[](0);\\n    \\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n    \\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n\\n     function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return priceFeed;\\n    }\\n\\n}\\n\\n\",\"keccak256\":\"0x2d71a0f737fb65d3fb69f79d8433071e36b7eb2d7a945c7a1ebab9bc7fae42e4\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        // Sepolia ETH / USD Address\\n        // https://docs.chain.link/data-feeds/price-feeds/addresses#Sepolia%20Testnet\\n\\n        // AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n        //     0x694AA1769357215DE4FAC081bf1f309aDC325306\\n        // );\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n    }\\n\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // or (Both will do the same thing)\\n        // uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18; // 1 * 10 ** 18 == 1000000000000000000\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0x7af9b8ba7d9c06e9f5cb27c78c0eb92a08088c19f60a1d7ce59afabeda4360de\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610ea9380380610ea98339818101604052810190610032919061011d565b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061014a565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100ea826100bf565b9050919050565b6100fa816100df565b811461010557600080fd5b50565b600081519050610117816100f1565b92915050565b600060208284031215610133576101326100ba565b5b600061014184828501610108565b91505092915050565b610d50806101596000396000f3fe6080604052600436106100745760003560e01c80639e87a5cd1161004e5780639e87a5cd1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b80633ccfd60b1461008d5780633e47d6f3146100a45780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102e3565b005b3480156100b057600080fd5b506100cb60048036038101906100c691906107aa565b61051f565b6040516100d891906107f0565b60405180910390f35b3480156100ed57600080fd5b506100f6610537565b60405161010391906107f0565b60405180910390f35b34801561011857600080fd5b50610121610544565b60405161012e919061086a565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b5061015661056e565b6040516101639190610894565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e91906108db565b610594565b6040516101a09190610894565b60405180910390f35b6802b5e3af16b18800006101e8600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105d390919063ffffffff16565b1015610229576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022090610965565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461027791906109b4565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461036a576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60018054905081101561040f576000600182815481106103905761038f6109e8565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808060010191505061036d565b50600067ffffffffffffffff81111561042b5761042a610a17565b5b6040519080825280602002602001820160405280156104595781602001602082028036833780820191505090505b506001908051906020019061046f9291906106a0565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161049690610a77565b60006040518083038185875af1925050503d80600081146104d3576040519150601f19603f3d011682016040523d82523d6000602084013e6104d8565b606091505b505090508061051c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051390610ad8565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600181815481106105a457600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105df8361060f565b90506000670de0b6b3a764000085836105f89190610af8565b6106029190610b69565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561065d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106819190610c27565b5050509150506402540be400816106989190610ca2565b915050919050565b828054828255906000526020600020908101928215610719579160200282015b828111156107185782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106c0565b5b509050610726919061072a565b5090565b5b8082111561074357600081600090555060010161072b565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107778261074c565b9050919050565b6107878161076c565b811461079257600080fd5b50565b6000813590506107a48161077e565b92915050565b6000602082840312156107c0576107bf610747565b5b60006107ce84828501610795565b91505092915050565b6000819050919050565b6107ea816107d7565b82525050565b600060208201905061080560008301846107e1565b92915050565b6000819050919050565b600061083061082b6108268461074c565b61080b565b61074c565b9050919050565b600061084282610815565b9050919050565b600061085482610837565b9050919050565b61086481610849565b82525050565b600060208201905061087f600083018461085b565b92915050565b61088e8161076c565b82525050565b60006020820190506108a96000830184610885565b92915050565b6108b8816107d7565b81146108c357600080fd5b50565b6000813590506108d5816108af565b92915050565b6000602082840312156108f1576108f0610747565b5b60006108ff848285016108c6565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b600061094f601b83610908565b915061095a82610919565b602082019050919050565b6000602082019050818103600083015261097e81610942565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109bf826107d7565b91506109ca836107d7565b92508282019050808211156109e2576109e1610985565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a61600083610a46565b9150610a6c82610a51565b600082019050919050565b6000610a8282610a54565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610ac2600b83610908565b9150610acd82610a8c565b602082019050919050565b60006020820190508181036000830152610af181610ab5565b9050919050565b6000610b03826107d7565b9150610b0e836107d7565b9250828202610b1c816107d7565b91508282048414831517610b3357610b32610985565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b74826107d7565b9150610b7f836107d7565b925082610b8f57610b8e610b3a565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610bb981610b9a565b8114610bc457600080fd5b50565b600081519050610bd681610bb0565b92915050565b6000819050919050565b610bef81610bdc565b8114610bfa57600080fd5b50565b600081519050610c0c81610be6565b92915050565b600081519050610c21816108af565b92915050565b600080600080600060a08688031215610c4357610c42610747565b5b6000610c5188828901610bc7565b9550506020610c6288828901610bfd565b9450506040610c7388828901610c12565b9350506060610c8488828901610c12565b9250506080610c9588828901610bc7565b9150509295509295909350565b6000610cad82610bdc565b9150610cb883610bdc565b9250828202610cc681610bdc565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610cfe57610cfd610985565b5b8282058414831517610d1357610d12610985565b5b509291505056fea2646970667358221220c355240bae13f739ba33b7239f55010000d13d0ae06dd471bc75df19e41bb1c764736f6c634300081b0033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c80639e87a5cd1161004e5780639e87a5cd1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b80633ccfd60b1461008d5780633e47d6f3146100a45780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102e3565b005b3480156100b057600080fd5b506100cb60048036038101906100c691906107aa565b61051f565b6040516100d891906107f0565b60405180910390f35b3480156100ed57600080fd5b506100f6610537565b60405161010391906107f0565b60405180910390f35b34801561011857600080fd5b50610121610544565b60405161012e919061086a565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b5061015661056e565b6040516101639190610894565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e91906108db565b610594565b6040516101a09190610894565b60405180910390f35b6802b5e3af16b18800006101e8600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105d390919063ffffffff16565b1015610229576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022090610965565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461027791906109b4565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461036a576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60018054905081101561040f576000600182815481106103905761038f6109e8565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808060010191505061036d565b50600067ffffffffffffffff81111561042b5761042a610a17565b5b6040519080825280602002602001820160405280156104595781602001602082028036833780820191505090505b506001908051906020019061046f9291906106a0565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161049690610a77565b60006040518083038185875af1925050503d80600081146104d3576040519150601f19603f3d011682016040523d82523d6000602084013e6104d8565b606091505b505090508061051c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051390610ad8565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600181815481106105a457600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105df8361060f565b90506000670de0b6b3a764000085836105f89190610af8565b6106029190610b69565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561065d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106819190610c27565b5050509150506402540be400816106989190610ca2565b915050919050565b828054828255906000526020600020908101928215610719579160200282015b828111156107185782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106c0565b5b509050610726919061072a565b5090565b5b8082111561074357600081600090555060010161072b565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107778261074c565b9050919050565b6107878161076c565b811461079257600080fd5b50565b6000813590506107a48161077e565b92915050565b6000602082840312156107c0576107bf610747565b5b60006107ce84828501610795565b91505092915050565b6000819050919050565b6107ea816107d7565b82525050565b600060208201905061080560008301846107e1565b92915050565b6000819050919050565b600061083061082b6108268461074c565b61080b565b61074c565b9050919050565b600061084282610815565b9050919050565b600061085482610837565b9050919050565b61086481610849565b82525050565b600060208201905061087f600083018461085b565b92915050565b61088e8161076c565b82525050565b60006020820190506108a96000830184610885565b92915050565b6108b8816107d7565b81146108c357600080fd5b50565b6000813590506108d5816108af565b92915050565b6000602082840312156108f1576108f0610747565b5b60006108ff848285016108c6565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b600061094f601b83610908565b915061095a82610919565b602082019050919050565b6000602082019050818103600083015261097e81610942565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109bf826107d7565b91506109ca836107d7565b92508282019050808211156109e2576109e1610985565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a61600083610a46565b9150610a6c82610a51565b600082019050919050565b6000610a8282610a54565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610ac2600b83610908565b9150610acd82610a8c565b602082019050919050565b60006020820190508181036000830152610af181610ab5565b9050919050565b6000610b03826107d7565b9150610b0e836107d7565b9250828202610b1c816107d7565b91508282048414831517610b3357610b32610985565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b74826107d7565b9150610b7f836107d7565b925082610b8f57610b8e610b3a565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610bb981610b9a565b8114610bc457600080fd5b50565b600081519050610bd681610bb0565b92915050565b6000819050919050565b610bef81610bdc565b8114610bfa57600080fd5b50565b600081519050610c0c81610be6565b92915050565b600081519050610c21816108af565b92915050565b600080600080600060a08688031215610c4357610c42610747565b5b6000610c5188828901610bc7565b9550506020610c6288828901610bfd565b9450506040610c7388828901610c12565b9350506060610c8488828901610c12565b9250506080610c9588828901610bc7565b9150509295509295909350565b6000610cad82610bdc565b9150610cb883610bdc565b9250828202610cc681610bdc565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610cfe57610cfd610985565b5b8282058414831517610d1357610d12610985565b5b509291505056fea2646970667358221220c355240bae13f739ba33b7239f55010000d13d0ae06dd471bc75df19e41bb1c764736f6c634300081b0033",
  "devdoc": {
    "author": "David Korgalidze",
    "details": "This implements price feeds as our library",
    "kind": "dev",
    "methods": {},
    "title": "A sample Funding Contract",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "This contract is for creating a sample funding contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 60,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 63,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 65,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "i_owner",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 75,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}